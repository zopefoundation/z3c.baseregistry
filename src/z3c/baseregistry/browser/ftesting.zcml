<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:browser="http://namespaces.zope.org/browser"
    i18n_domain="zope">
  <include package="zope.component" file="meta.zcml" />
  <!-- registerIn directive -->
  <include package="z3c.baseregistry" file="meta.zcml" />
  <!-- view directive -->
  <include package="zope.browserpage" file="meta.zcml" />
  <!-- resource directive -->
  <include package="zope.browserresource" file="meta.zcml" />
  <!-- publisher directivie -->
  <include package="zope.app.publication" file="meta.zcml" />
  <!-- grant directives -->
  <include package="zope.securitypolicy" file="meta.zcml" />
  <!-- principal directives -->
  <include package="zope.security" file="meta.zcml" />
  <include package="zope.principalregistry" file="meta.zcml" />

  <!-- defaultView directive -->
  <include package="zope.publisher" file="meta.zcml" />

  <!-- menu/addMenuItem directive -->
  <include package="zope.browsermenu" file="meta.zcml" />

  <!-- editform/addform directive; required by
	   zope.app.authentication.browser -->
  <include package="zope.app.form.browser" file="meta.zcml" />

  <!-- containerViews directive; required by
	   zope.app.authentication.browser -->
  <include package="zope.app.container.browser" file="meta.zcml" />

  <include package="zope.componentvocabulary" />
  <utility factory="zope.app.schema.vocabulary.ZopeVocabularyRegistry" />


  <include package="zope.annotation" />
  <include package="zope.authentication" />
  <include package="zope.browsermenu" />
  <include package="zope.container" />
  <include package="zope.component" />
  <include package="zope.location" />
  <include package="zope.login" />
  <include package="zope.password" />
  <include package="zope.principalannotation" />
  <include package="zope.principalregistry" />
  <include package="zope.publisher" />
  <include package="zope.security" />
  <include package="zope.securitypolicy" />
  <include package="zope.session" />

  <!-- adapters from zope.schema fields to IInputWidget -->
  <include package="zope.formlib" />
  <include package="zope.site" />
  <include package="zope.traversing" />
  <include package="zope.traversing.browser" />

  <!-- These normally come from zope.app.zcmlfiles/menus.zcml -->
  <browser:menu
      id="zmi_views"
      title="Views"
      description="Menu for displaying alternate representations of an object"
      />

  <browser:menu
      id="zmi_actions"
      title="Actions"
      description="Menu for displaying actions to be performed"
      />
  <browser:menu
      id="zope.app.container.add"
      title="Add"
      description="Menu for objects to be added according to
                   containment constraints"
      interface="zope.app.publisher.interfaces.browser.AddMenu"
      />

  <!-- Bases menu item and "Base Components" vocabulary -->
  <include package="z3c.baseregistry.browser" />

  <!-- Normally done in zope.app.principalannotation's bootstrap
       subscriber -->
  <utility
      factory="zope.principalannotation.utility.PrincipalAnnotationUtility"
      provides="zope.principalannotation.interfaces.IPrincipalAnnotationUtility"
      />

  <!-- Register the Application folder -->
  <include package="zope.app.appsetup" />

  <!-- @@standard_macros -->
  <include package="zope.app.basicskin" />
  <!-- render the ZMI menus -->
  <include package="zope.app.rotterdam" />
  <!-- "zope" path adapter -->
  <include package="zope.app.pagetemplate" />

  <include package="zope.app.publication" />
  <include package="zope.app.container" />
  <include package="zope.app.component" />
  <include package="zope.app.container.browser" />
  <include package="zope.app.component.browser" />
  <include package="zope.app.authentication" />
  <include package="zope.app.authentication.browser" />

  <browser:defaultView name="index.html" />
  <browser:defaultSkin name="Rotterdam" />

  <!-- Management view selector; normally from zope.app.publisher.browser -->
  <!-- Get first accessible item from zmi_views menu -->
  <browser:page
      for="*"
      name="SelectedManagementView.html"
      permission="zope.Public"
      class=".tests.ManagementViewSelector"
      allowed_interface="zope.publisher.interfaces.browser.IBrowserPublisher"
      />
  <!-- Make manage an alias for same -->
  <browser:page
      for="*"
      name="manage"
      permission="zope.ManageContent"
      class=".tests.ManagementViewSelector"
      allowed_interface="zope.publisher.interfaces.browser.IBrowserPublisher"
      />

  <!-- login_logout view -->
  <!-- Normally comes from zope.app.security. -->
  <!-- Needed for Rotterdam -->
  <browser:page
      name="login_logout"
      for="*"
      class=".tests.LoginLogout"
      permission="zope.Public"
      />

  <!-- Security setup -->

  <class class="zope.site.folder.Folder">
    <allow attributes="items __getitem__ get __contains__ __setitem__" />
  </class>

  <securityPolicy
    component="zope.securitypolicy.zopepolicy.ZopeSecurityPolicy" />

  <role id="zope.Anonymous" title="Everybody"
        description="All users have this role implicitly" />
  <role id="zope.Manager" title="Site Manager" />

  <!-- Replace the following directive if you don't want public access
       -->
  <grant permission="zope.View"
         role="zope.Anonymous" />

  <grantAll role="zope.Manager" />

  <!-- Principals -->

  <unauthenticatedPrincipal
      id="zope.anybody"
      title="Unauthenticated User" />

  <unauthenticatedGroup
    id="zope.Anybody"
    title="Unauthenticated Users"
    />

  <authenticatedGroup
    id="zope.Authenticated"
    title="Authenticated Users"
    />

  <everybodyGroup
    id="zope.Everybody"
    title="All Users"
    />

  <!-- Principal that tests generally run as -->
  <principal
      id="zope.mgr"
      title="Manager"
      login="mgr"
      password="mgrpw" />

  <grant role="zope.Manager" principal="zope.mgr" />

  <!-- Now actual utilities used in the tests for this package -->

  <utility
      component=".tests.custom"
      provides="zope.component.interfaces.IComponents"
      name="custom" />

  <utility component=".tests.example1" />
  <utility component=".tests.example2" name="example2" />

  <registerIn registry=".tests.custom">
    <utility component=".tests.example3" />
    <utility component=".tests.example4" name="example4" />
  </registerIn>

</configure>
